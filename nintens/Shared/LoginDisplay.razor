@using MudBlazor
@using  System.Globalization
@using Microsoft.AspNetCore.Identity
@using repository

@inject NavigationManager Nav
@inject SignInManager<ApplicationUser> SignInManager
<AuthorizeView>
    <Authorized>
        <MudText Align="Align.Right" Style="@($"color:{Colors.Yellow.Accent2};")">Hello,@context.User.Identity.Name!</MudText>
        <MudMenu Icon="@Icons.Material.Filled.Language" IconColor="@Color.Warning">
            @foreach (var culture in supportedCultures)
            {
                <MudMenuItem  Style="height:25px;width:140px;"><MudLink>@culture.DisplayName</MudLink></MudMenuItem>
            }
        </MudMenu>

        <MudMenu Style="width:120px;" Icon="@Icons.Material.Filled.Settings" IconColor="@Color.Warning" PositionAtCursor="true">
            <MudMenuItem Style="height:25px;width:100px;"><MudLink>Profile</MudLink></MudMenuItem>
            <MudMenuItem Style="height:25px;width:100px;"><MudLink Href="Identity/Account/LogOut">Logout</MudLink></MudMenuItem>
        </MudMenu>
         </Authorized>
    <NotAuthorized>
        <MudLink Href="Identity/Account/Register" Typo="Typo.body2" Color="Color.Warning">Register</MudLink>
        <MudLink Href="Identity/Account/Login" Typo="Typo.body2" Color="Color.Warning">Log in</MudLink>
    </NotAuthorized>
</AuthorizeView>

@code
{
    protected override void OnInitialized()
    {
        Culture = CultureInfo.CurrentCulture;
    }

    private CultureInfo Culture
    {
        get => CultureInfo.CurrentCulture;
        set
        {
        }
    }
    private CultureInfo[] supportedCultures = new[]
{
        new CultureInfo("en-US"),
        new CultureInfo("zh-CN"),
    };

    public async Task OnPost()
    {
        await SignInManager.SignOutAsync();
        NavigationManager.ToBaseRelativePath("Identity/Account/Login/");
    }
}